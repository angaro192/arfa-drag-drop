{"version":3,"file":"arfa-drag-drop.mjs","sources":["../../../projects/arfa-drag-drop/src/lib/services/helpersService.service.ts","../../../projects/arfa-drag-drop/src/lib/arfa-drag-drop.component.ts","../../../projects/arfa-drag-drop/src/lib/arfa-drag-drop.component.html","../../../projects/arfa-drag-drop/src/lib/arfa-drag-drop.module.ts","../../../projects/arfa-drag-drop/src/lib/services/arfa-drag-drop.service.ts","../../../projects/arfa-drag-drop/src/public-api.ts","../../../projects/arfa-drag-drop/src/arfa-drag-drop.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HelpersService {\n  constructor() {}\n\n  compress(\n    file: File,\n    MAX_WIDTH: number = 200,\n    MAX_HEIGHT: number = 200\n  ): Observable<any> {\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n\n    return Observable.create((observer: any) => {\n      reader.onload = (ev) => {\n        const img = new Image();\n\n        img.src = (ev.target as any).result;\n\n        (img.onload = () => {\n          const elem = document.createElement('canvas');\n          let width = img.width;\n          let height = img.height;\n\n          if (width > height) {\n            if (width > MAX_WIDTH) {\n              height *= MAX_WIDTH / width;\n\n              width = MAX_WIDTH;\n            }\n          } else {\n            if (height > MAX_HEIGHT) {\n              width *= MAX_HEIGHT / height;\n\n              height = MAX_HEIGHT;\n            }\n          }\n          elem.width = width;\n          elem.height = height;\n          const ctx = elem.getContext('2d') as CanvasRenderingContext2D;\n          ctx.drawImage(img, 0, 0, width, height);\n          ctx.canvas.toBlob(\n            (blob) => {\n              observer.next(\n                new File([blob as BlobPart], file.name, {\n                  type: file.type,\n\n                  lastModified: Date.now(),\n                })\n              );\n            },\n            file.type,\n            1\n          );\n        }),\n          (reader.onerror = (error) => observer.error(error));\n      };\n    });\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { catchError, take, throwError } from 'rxjs';\nimport { HelpersService } from './services/helpersService.service';\n\n@Component({\n  selector: 'lib-arfa-drag-drop',\n  templateUrl: './arfa-drag-drop.component.html',\n  styleUrls: ['./arfa-drag-drop.component.scss'],\n})\nexport class ArfaDragDropComponent implements OnInit {\n  @Input() attachments: any[] = [];\n  @Input() name: string;\n  @Input() messageDragDrop: string;\n  @Input() nameTypeFile: string;\n  @Input() multiple = false;\n  @Input() limit = 999;\n\n  @Output() newItemEvent = new EventEmitter<any[]>();\n\n  constructor(\n    private cd: ChangeDetectorRef,\n    private helpersService: HelpersService\n  ) {}\n\n  ngOnInit(): void {}\n\n  addNewItem(value: any) {\n    this.newItemEvent.emit(value);\n  }\n\n  onFileDropped($event, arrayFiles: any[], limit: number = null) {\n    this.prepareFilesList($event, arrayFiles, limit);\n  }\n\n  fileBrowseHandler(files, arrayFiles: any[], limit: number = null) {\n    this.prepareFilesList(files, arrayFiles, limit);\n  }\n\n  deleteFile(index: number, arrayFiles: any[]) {\n    arrayFiles.splice(index, 1);\n    this.cd.detectChanges();\n  }\n\n  prepareFilesList(files: any, arrayFiles: any[], limit: number = null) {\n    this.onSelectFile(files, arrayFiles, limit);\n  }\n\n  onSelectFile(e: any, arrayFiles: any[], limit: number = null) {\n    Array.prototype.forEach.call(e.target.files, (file) => {\n      const pattern = /image-*/;\n      if (!file || !file.type.match(pattern)) {\n        return;\n      }\n\n      const maxAvatarImage = 8;\n      if (Math.round(file.size / 1024) >= maxAvatarImage * 1000) {\n        return;\n      }\n\n      this.helpersService\n        .compress(file, 425, 96)\n        .pipe(\n          take(1),\n          catchError((event) => {\n            return throwError(event);\n          })\n        )\n        .subscribe((response) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(response);\n          reader.onload = () => {\n            const fileObject = {\n              nameTypeFile: this.nameTypeFile,\n              fileName: file.name,\n              file: reader.result as string,\n            };\n            if (limit != null) {\n              if (arrayFiles.length < limit) {\n                arrayFiles.push(fileObject);\n                this.addNewItem(fileObject);\n              }\n            } else {\n              arrayFiles.push(fileObject);\n            }\n            this.cd.detectChanges();\n          };\n        });\n    });\n  }\n}\n","<label class=\"label-dragdrop\">{{name}}</label>\n<div id=\"fileUploadFoto\">\n  <div class=\"ds-drod-container border\" appDnd (fileDropped)=\"onFileDropped($event, attachments, limit)\">\n    <input placeholder=\"...\" type=\"file\" #newItem [multiple]=\"multiple\" (change)=\"fileBrowseHandler($event, attachments,limit)\" />\n    <i class=\"fas fa-cloud-upload-alt fa-3x\" class=\"ds-colorSpan\"></i> <br />\n    <span *ngIf=\"messageDragDrop\" class=\"ds-colorSpan\">{{messageDragDrop}}</span>\n  </div>\n  <div class=\"files-list\">\n    <div class=\"single-file m-0\" *ngFor=\"let attachment of attachments; let i = index\">\n      <i class=\"fas fa-file\" class=\"ds-colorSpan\"></i>\n      <div class=\"info\">\n        <h4 class=\"name mx-2\">\n          {{ attachment?.fileName }}\n        </h4>\n      </div>\n      <i class=\"fas fa-trash delete\" (click)=\"deleteFile(i, attachments)\"></i>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ArfaDragDropComponent } from './arfa-drag-drop.component';\n\n@NgModule({\n  declarations: [ArfaDragDropComponent],\n  imports: [CommonModule],\n  exports: [ArfaDragDropComponent],\n})\nexport class ArfaDragDropModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArfaDragDropService {\n\n  constructor() { }\n}\n","/*\n * Public API Surface of arfa-drag-drop\n */\n\nexport * from './lib/arfa-drag-drop.component';\nexport * from './lib/arfa-drag-drop.module';\nexport * from './lib/services/arfa-drag-drop.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.HelpersService"],"mappings":";;;;;;MAMa,cAAc,CAAA;AACzB,IAAA,WAAA,GAAA,GAAgB;AAEhB,IAAA,QAAQ,CACN,IAAU,EACV,YAAoB,GAAG,EACvB,aAAqB,GAAG,EAAA;AAExB,QAAA,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;AAEhC,QAAA,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAE3B,QAAA,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,QAAa,KAAI;AACzC,YAAA,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,KAAI;AACrB,gBAAA,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;gBAExB,GAAG,CAAC,GAAG,GAAI,EAAE,CAAC,MAAc,CAAC,MAAM,CAAC;AAEpC,gBAAA,CAAC,GAAG,CAAC,MAAM,GAAG,MAAK;oBACjB,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9C,oBAAA,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AACtB,oBAAA,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;oBAExB,IAAI,KAAK,GAAG,MAAM,EAAE;wBAClB,IAAI,KAAK,GAAG,SAAS,EAAE;AACrB,4BAAA,MAAM,IAAI,SAAS,GAAG,KAAK,CAAC;4BAE5B,KAAK,GAAG,SAAS,CAAC;AACnB,yBAAA;AACF,qBAAA;AAAM,yBAAA;wBACL,IAAI,MAAM,GAAG,UAAU,EAAE;AACvB,4BAAA,KAAK,IAAI,UAAU,GAAG,MAAM,CAAC;4BAE7B,MAAM,GAAG,UAAU,CAAC;AACrB,yBAAA;AACF,qBAAA;AACD,oBAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,oBAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAA6B,CAAC;AAC9D,oBAAA,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;oBACxC,GAAG,CAAC,MAAM,CAAC,MAAM,CACf,CAAC,IAAI,KAAI;AACP,wBAAA,QAAQ,CAAC,IAAI,CACX,IAAI,IAAI,CAAC,CAAC,IAAgB,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE;4BACtC,IAAI,EAAE,IAAI,CAAC,IAAI;AAEf,4BAAA,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE;AACzB,yBAAA,CAAC,CACH,CAAC;AACJ,qBAAC,EACD,IAAI,CAAC,IAAI,EACT,CAAC,CACF,CAAC;AACJ,iBAAC;AACC,qBAAC,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AACxD,aAAC,CAAC;AACJ,SAAC,CAAC,CAAC;KACJ;;2GAzDU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cAFb,MAAM,EAAA,CAAA,CAAA;2FAEP,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCWY,qBAAqB,CAAA;IAUhC,WACU,CAAA,EAAqB,EACrB,cAA8B,EAAA;QAD9B,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;QACrB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAX/B,IAAW,CAAA,WAAA,GAAU,EAAE,CAAC;QAIxB,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;QACjB,IAAK,CAAA,KAAA,GAAG,GAAG,CAAC;AAEX,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAS,CAAC;KAK/C;AAEJ,IAAA,QAAQ,MAAW;AAEnB,IAAA,UAAU,CAAC,KAAU,EAAA;AACnB,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;AAED,IAAA,aAAa,CAAC,MAAM,EAAE,UAAiB,EAAE,QAAgB,IAAI,EAAA;QAC3D,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;KAClD;AAED,IAAA,iBAAiB,CAAC,KAAK,EAAE,UAAiB,EAAE,QAAgB,IAAI,EAAA;QAC9D,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;KACjD;IAED,UAAU,CAAC,KAAa,EAAE,UAAiB,EAAA;AACzC,QAAA,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KACzB;AAED,IAAA,gBAAgB,CAAC,KAAU,EAAE,UAAiB,EAAE,QAAgB,IAAI,EAAA;QAClE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;KAC7C;AAED,IAAA,YAAY,CAAC,CAAM,EAAE,UAAiB,EAAE,QAAgB,IAAI,EAAA;AAC1D,QAAA,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,KAAI;YACpD,MAAM,OAAO,GAAG,SAAS,CAAC;AAC1B,YAAA,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;gBACtC,OAAO;AACR,aAAA;YAED,MAAM,cAAc,GAAG,CAAC,CAAC;AACzB,YAAA,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,cAAc,GAAG,IAAI,EAAE;gBACzD,OAAO;AACR,aAAA;AAED,YAAA,IAAI,CAAC,cAAc;AAChB,iBAAA,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC;iBACvB,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,EACP,UAAU,CAAC,CAAC,KAAK,KAAI;AACnB,gBAAA,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;AAC3B,aAAC,CAAC,CACH;AACA,iBAAA,SAAS,CAAC,CAAC,QAAQ,KAAI;AACtB,gBAAA,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;AAChC,gBAAA,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC/B,gBAAA,MAAM,CAAC,MAAM,GAAG,MAAK;AACnB,oBAAA,MAAM,UAAU,GAAG;wBACjB,YAAY,EAAE,IAAI,CAAC,YAAY;wBAC/B,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,IAAI,EAAE,MAAM,CAAC,MAAgB;qBAC9B,CAAC;oBACF,IAAI,KAAK,IAAI,IAAI,EAAE;AACjB,wBAAA,IAAI,UAAU,CAAC,MAAM,GAAG,KAAK,EAAE;AAC7B,4BAAA,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC5B,4BAAA,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AAC7B,yBAAA;AACF,qBAAA;AAAM,yBAAA;AACL,wBAAA,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC7B,qBAAA;AACD,oBAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;AAC1B,iBAAC,CAAC;AACJ,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;KACJ;;kHA/EU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,mQChBlC,06BAmBA,EAAA,MAAA,EAAA,CAAA,+jGAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDHa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,oBAAoB,EAAA,QAAA,EAAA,06BAAA,EAAA,MAAA,EAAA,CAAA,+jGAAA,CAAA,EAAA,CAAA;kIAKrB,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAEI,YAAY,EAAA,CAAA;sBAArB,MAAM;;;MEfI,kBAAkB,CAAA;;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAJd,YAAA,EAAA,CAAA,qBAAqB,CAC1B,EAAA,OAAA,EAAA,CAAA,YAAY,aACZ,qBAAqB,CAAA,EAAA,CAAA,CAAA;gHAEpB,kBAAkB,EAAA,OAAA,EAAA,CAHpB,CAAC,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;2FAGZ,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,qBAAqB,CAAC;AACjC,iBAAA,CAAA;;;MCHY,mBAAmB,CAAA;AAE9B,IAAA,WAAA,GAAA,GAAiB;;gHAFN,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACJD;;AAEG;;ACFH;;AAEG;;;;"}